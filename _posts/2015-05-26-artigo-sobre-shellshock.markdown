---
layout: post
title: "Artigo sobre ShellShock"
date: '2015-05-26T18:19:00.001-07:00'
description: "Artigo sobre ShellShock"
main-class: 'misc'
tags:
- Artigos
image: "http://1.bp.blogspot.com/-qEDdfsRuIEk/VWUbBzE3_JI/AAAAAAAABTY/ENmaKki8mnQ/s72-c/shellshock.jpg"
twitter_text: "Artigo sobre ShellShock"
introduction: "Artigo sobre ShellShock"
---
![Blog Linux](http://1.bp.blogspot.com/-qEDdfsRuIEk/VWUbBzE3_JI/AAAAAAAABTY/ENmaKki8mnQ/s320/shellshock.jpg "Blog Linux")
ShellshockShellshock, também conhecido como Bashdoor, é uma família de bugs de segurança no amplamente utilizado Unix Bash shell , o primeiro dos quais foi divulgada em 24 de setembro de 2014. Muitos  serviços voltados para a Internet, como algumas implementações de  servidor web , use Bash para processar certos pedidos, permitindo que um  invasor para causar versões vulneráveis ​​do Bash para executar comandos arbitrários .  Isso pode permitir que um invasor obter acesso não autorizado a um sistema de computador.  Stéphane Chazelas contactado mantenedor do  Bash, Chet Ramey, em 12 de setembro de 2014 contando sobre sua  descoberta do bug original, que ele chamou de “Bashdoor”.  Trabalhando em conjunto com especialistas em segurança, ele logo teve um patch também. O erro foi atribuído o identificador CVE CVE-2014-6271. Foi anunciado ao público no dia 24 de setembro de 2014 quando as  atualizações da festança com a correção foram pronta para distribuição. 
 O primeiro bug faz com que Bash para executar comandos involuntariamente quando os comandos são concatenadas para o final de definições de funções armazenadas nos valores das variáveis ​​de ambiente .   Poucos dias depois da publicação do presente, intenso escrutínio das  falhas de projeto subjacentes descoberto uma variedade de  vulnerabilidades relacionadas, (CVE-2014-6277, CVE-2014-6278, CVE-2014-7169, CVE-2014-7186 e CVE-2014-7187);  que Ramey endereçados com uma série de outras manchas. 
 Atacantes explorado Shellshock poucas horas depois da divulgação inicial, criando botnets de computadores comprometidos para realizar ataques distribuídos de negação de serviço, e varredura de vulnerabilidades . As empresas de segurança registradas milhões de ataques e sondas relacionadas ao bug nos dias seguintes a divulgação. 
 Shellshock poderia comprometer milhões de servidores sem patches e outros sistemas.  Por conseguinte, tem sido comparado com o Heartbleed erro na sua gravidade. 
 Apple Inc. comentou que OS X sistemas são seguros por padrão, a menos que os usuários configurar serviços UNIX avançados.  Tais usuários avançados são tipicamente capazes de transformar os serviços off até que um patch construído usando Xcode pode ser implementada. Embora notificado da vulnerabilidade antes de  ter sido tornado público, a empresa não lançar uma atualização  correspondente OS X até 29 setembro de 2014, altura em que a festança OS  X Update 1.0 foi lançado. 
Fundo  As vulnerabilidades afetam Shellshock Bash , um programa que vários Unix sistemas baseados usar para executar linhas de comando e scripts de comando.  Muitas vezes, é instalado como padrão do sistema de interface de linha de comando .  Bash é software livre , desenvolvido de forma colaborativa e supervisionado, desde 1992, em  regime de voluntariado por Chet Ramey, um arquiteto de software  profissional.  A análise do código-fonte história do Bash mostra as vulnerabilidades já existia desde a versão  1.03 do Bash lançado em setembro de 1989, introduzida pelo autor  original do Bash Brian Fox .
 Em sistemas operacionais baseados em Unix, e  em outros sistemas operacionais que Bash suporta, cada programa em  execução tem sua própria lista de pares nome / valor chamados variáveis ​​de ambiente .  Quando um programa é iniciado um outro programa, ele fornece uma lista  inicial de variáveis ​​de ambiente para o novo programa. Separadamente  destes, Bash também mantém uma lista interna de funções, que são nomeados os scripts que podem ser executados a partir do programa. [ 22] Desde Bash atua tanto como um interpretador de comandos e como um comando, é possível executar Bash de dentro de si mesmo.  Quando isso acontece, a instância original pode exportar variáveis ​​de ambiente e definições de funções para a nova instância.  As definições de função são exportados por codificá-los na lista de  variáveis ​​de ambiente como variáveis ​​cujos valores começam com  parênteses (“()”) seguido de um definição da função.  A nova instância do Bash, em cima de partida, verifica sua lista  variável de ambiente para valores neste formato e converte-los de volta  para funções internas.  Ele realiza  esta conversão através da criação de um fragmento de código a partir do  valor e executá-lo, criando, assim, a função de “on-the-fly”, mas as  versões afetadas não verificar que o fragmento é a definição de função  válido. Portanto, dada a oportunidade de executar Bash com um valor  escolhido em sua lista variável de ambiente, um atacante pode executar  comandos arbitrários ou explorar outros erros que possam existir no  interpretador de comandos do Bash.
 Relatos de ataques  Dentro de uma hora do anúncio da vulnerabilidade Bash, houve relatos de máquinas a ser comprometida pelo bug.  Até 25 de setembro de 2014, botnets baseados em computadores comprometidos com exploits baseados na bug estavam sendo usados ​​por atacantes para negação de serviço distribuídos ataques (DDoS) e varredura de vulnerabilidades .   Kaspersky Labs informou que máquinas comprometida em um ataque, apelidado de  “Thanks-Rob”, estavam realizando ataques DDoS contra três alvos, que  eles não se identificar.   Em 26 de setembro de 2014, uma botnet relacionados com Shellshock  apelidado de “wopbot” foi relatado, que estava sendo usado para um  ataque DDoS contra Akamai Technologies e para digitalizar o Departamento de Defesa dos Estados Unidos . 
 Em 26 de setembro, a empresa de segurança Incapsula observou 17.400 ataques em mais de 1.800 domínios web, proveniente de 400 endereços IP únicos, nas últimas 24 horas;  55% dos ataques foram provenientes da China e dos Estados Unidos.  Em 30 de setembro, a empresa de desempenho website CloudFlare disse que estava rastreando cerca de 1,5 milhões de ataques e sondas por dia relacionadas ao bug. 
 Em 6 de outubro, foi amplamente noticiado que Yahoo! servidores tinha sido comprometida em um ataque relacionado com a  questão Shellshock. No entanto, no dia seguinte, ele foi negado que  tinha sido Shellshock que, especificamente, tinha permitido a esses ataques. 
 Vetores de exploração específicas  Servidor web baseado em CGI Quando um servidor web usa o Common Gateway Interface (CGI) para lidar com uma solicitação de documento, ele passa vários  detalhes do pedido de um programa de manipulador na lista variável de  ambiente.  Por exemplo, a variável HTTP_USER_AGENT tem um valor que, em utilização normal, identifica o programa de envio do pedido.  Se o manipulador de solicitação é um script Bash, ou se ele executa uma por exemplo, usando o (3) sistema de chamada, Bash receberá as variáveis ​​de ambiente passadas pelo servidor e irá processá-los como descrito acima.  Isso fornece um meio para um atacante para acionar a vulnerabilidade  Shellshock com um pedido do servidor especialmente criado.  Documentação de segurança para os amplamente utilizados Apache estados servidor Web: “scripts CGI pode … ser extremamente perigoso se  não forem cuidadosamente verificados.” e outros métodos de tratamento de  pedidos de servidor web são muitas vezes utilizados.  Há uma série de serviços on-line que tentam testar a vulnerabilidade contra servidores web expostos à Internet. [ carece de fontes? ]  Servidor OpenSSH OpenSSH tem uma característica “ForceCommand”, onde um comando fixo é executado  quando o usuário faz login, em vez de apenas executar um shell de  comandos irrestrita.  O comando fixo é executado mesmo que o usuário especificou que outro comando deve ser executado;  nesse caso, o comando original é colocada na variável ambiente “SSH_ORIGINAL_COMMAND”.  Quando o comando forçado é executado em um shell Bash (se o shell do  usuário é definido como Bash), o shell Bash irá analisar a variável de  ambiente SSH_ORIGINAL_COMMAND no start-up, e executar os comandos  embutidos nela.  O usuário tem usado seu acesso shell restrito para obter acesso irrestrito shell, usando o bug Shellshock.   Clientes DHCP Alguns DHCP clientes também podem passar comandos para Bash;  um sistema vulnerável poderia ser atacado ao se conectar a uma rede Wi-Fi aberta.  Um cliente DHCP normalmente solicita e recebe um endereço IP de um  servidor DHCP, mas também pode ser apresentada uma série de opções  adicionais.  Um servidor DHCP malicioso  poderia fornecer, em uma dessas opções, uma seqüência criado para  executar um código em uma estação de trabalho ou laptop vulnerável.   Servidor Qmail Ao usar Bash para processar mensagens de e-mail (por exemplo, através .forward ou tubulação qmail-alias), o qmail servidor de correio passa entrada externa através de uma forma que pode explorar uma versão vulnerável do Bash.   IBM HMC shell restrito O bug pode ser explorado para obter acesso a festança do shell restrito do IBM Hardware Management Console , uma pequena variante do Linux para administradores de sistema.  IBM lançou um patch para resolver esse problema.  Vulnerabilidades relatadas  Visão geral  O mantenedor do Bash foi avisado sobre a primeira descoberta do bug em 12 de setembro de 2014;  uma correção seguido em breve.   Algumas empresas e distribuidores foram informados antes que a matéria  foi divulgada publicamente em 24 de Setembro 2014, com identificador CVE  CVE-2014-6271.   No entanto, após o lançamento do patch havia relatos posteriores de diferentes vulnerabilidades, mas relacionados.
 Em 26 de setembro de 2014, dois colaboradores de código aberto, David A. Wheeler e Norihiro Tanaka, notou que havia problemas adicionais, mesmo depois  de os sistemas que utilizam os patches mais recentes disponíveis  remendar.  Em e-mail enviado para a  lista de oss-sec ea lista festança bug, Wheeler escreveu: “Este patch  apenas continua o trabalho” Whack-a-mole “de fixação de erros de  análise, que começou com o primeiro patch parser do Bash é certa [para. ]  tem muitas muitas muitas outras vulnerabilidades “. No entanto, isso  sim era algum raciocínio geral, sem, na verdade, apresentando exemplos  de exploração e implícita restringindo funcionalidade Bash com o efeito  que alguns scripts Bash não funciona mais, mesmo que não se destinam a prejudicar outros usuários.
 Em 27 de setembro de 2014, Michal Zalewski, da Google Inc. anunciou sua descoberta de outras vulnerabilidades da festança,  um baseado no fato de que Bash normalmente é compilado sem layout de espaço de endereço randomização . Em 1 de Outubro, Zalewski divulgou detalhes do erros finais e confirmou que um patch por Florian Weimer do Red Hat postado em 25 de setembro, de fato, impedi-los. 
 Relatório inicial (CVE-2014-6271)  Esta forma original da vulnerabilidade  envolve uma variável de ambiente especialmente criado contendo uma  definição de função exportado, seguido de comandos arbitrários.  Bash executa incorretamente os comandos rasteiras quando importa a  função. A vulnerabilidade pode ser testado com o seguinte comando:
 env x = ‘() { :;};  echo vulnerável’ bash -c “echo isso é um teste” Em sistemas afetados pela vulnerabilidade,  os comandos acima exibirá a palavra “vulneráveis”, como resultado de  Bash executar o comando “echo vulnerável”, que foi incorporado na variável de ambiente especialmente criado com o nome “x”.  
 CVE-2014-6277  Descoberto por Michał Zalewski.   esta vulnerabilidade refere-se à análise de definições de funções em variáveis ​​de ambiente por Bash, e pode causar um segfault . 
 CVE-2014-6278  Também descoberto por Michał Zalewski.  isso se relaciona com a análise de definições de funções em variáveis ​​de ambiente Bash.
 CVE-2014-7169  No mesmo dia, a vulnerabilidade original foi publicado, Tavis Ormandy descobriu esse bug relacionado  o que é demonstrado no código a seguir:
env X = ‘() { (a)=>\’ bash -c “echo date” ; cat echo Em um sistema vulnerável isso iria executar o comando “date” involuntariamente. 
 Aqui está um exemplo de um sistema que tem um patch para o CVE-2014-6271, mas não CVE-2014-7169:
 $ X = ‘() { (a)=>\’ bash -c “echo date” bash: X: line 1 : syntax error near unexpected token ` = ‘  bash: X: line 1: `’ bash: error importing function definition for ` X ‘  $ cat echo  Fri Sep 26 01:37:16 UTC 2014 O sistema exibe erros de sintaxe,  notificando o usuário que CVE-2014-6271 foi impedido, mas ainda escreve  um arquivo chamado ‘eco’, no diretório de trabalho, contendo o resultado  da chamada “data”.
 Um sistema atualizado para tanto CVE-2014-6271 e CVE-2014-7169 simplesmente repetir a palavra “data” e o arquivo “echo” não será criado, como mostrado abaixo:
 $ X = ‘() { (a)=>\’ bash -c “echo date” date $ cat echo cat: echo: No such file or directory CVE-2014-7186  Florian Weimer e Todd Sabin acharam esse bug,   , que refere-se a um erro fora dos limites de acesso à memória no código parser Bash. 
 Um exemplo da vulnerabilidade, o que potencializa o uso de múltiplas declarações “
 bash -c ‘true   || echo “CVE-2014-7186 vulnerable, redir_stack” Um sistema vulnerável ecoará o texto “CVE-2014-7186 vulnerável, redir_stack”.
 CVE-2014-7187  Também encontrado por Florian Weimer,  este é um erro off-by-one no código parser Bash, permitindo fora dos limites de acesso à memória. 
 Um exemplo da vulnerabilidade, o que potencializa o uso de múltiplas declarações “feito”:
 ( for x in { 1 .. 200 } ; do echo “for x $x in ; do :” ; done ; for x in { 1 .. 200 } ; do echo done ; done ) | bash || echo “CVE-2014-7187 vulnerable, word_lineno” Um sistema vulnerável ecoará o texto “CVE-2014-7187 vulnerável, word_lineno”.  Este teste requer um shell que suporta expansão cinta . 
 Patches  Até 24 de setembro de 2014, Bash  mantenedor Chet Ramey fornecida uma versão bash43-025 pedaço de Bash 4.3  abordando CVE-2014-6271, , que já foi embalado por mantenedores da  distribuição.  Em 24 de setembro, bash43-026 seguida, dirigindo-CVE-2014-7169. Em seguida, CVE-2014-7186 foi descoberto.  Florian Weimer do Red Hat postou alguns códigos de correção para este “extra-oficialmente” em 25  de setembro, que Ramey incorporados em Bash como bash43-027. -Estes  remendos desde código só, útil apenas para aqueles que sabem como compilar (” reconstruir “) um novo Bash binário executável arquivo a partir do arquivo de correção e demais arquivos de código fonte.
 No dia seguinte, a Red Hat oficialmente apresentado de acordo com atualizações para o Red Hat Enterprise Linux , depois de mais um dia para o Fedora 21 . Canonical Ltd. apresentou atualizações para os seus Ubuntu versões de suporte estendido, sábado, 27 de setembro de , no domingo, houve atualizações para o SUSE Linux Enterprise . A segunda-feira seguinte e terça-feira, no final do mês, a Apple OS X atualizações apareceu. 
 Em 1 de Outubro de 2014, Michał Zalewski de Google Inc. finalmente declarou que o código do Weimer e bash43-027 não só corrigir  os três primeiros erros, mas mesmo os três restantes que foram  publicados após bash43-027, incluindo suas próprias duas descobertas.   Este significa que, após as atualizações de distribuição anteriores,  não há outras atualizações foram necessárias para cobrir todas as seis  questões. 
 Todos eles também foram cobertos pela IBM Hardware Management Console . 
Origem: ShellShock – Wikipédia
